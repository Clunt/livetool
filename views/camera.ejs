<!DOCTYPE html>
<html lang="en">
<head>
  <meta names="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <meta charset="UTF-8">
  <title>Camera</title>
  <style>
  *{margin: 0;padding: 0;}
  #app{font-size: 0;}
  </style>
</head>
<body>
  <div id="touch" style="text-align: center;height: 600px;line-height: 600px;background: #efefef">点我？完美展示</div>
  <div id="app"></div>
  <div style="height: 1000px;background: #000"></div>
  <script>
    function initSourceWebcam() {
      // init default value
      var onError = function(error) {
        alert('Webcam Error\nName: ' + error.name + '\nMessage: ' + error.message);
      }

      var domElement = document.createElement('video');
      domElement.setAttribute('autoplay', '');
      domElement.setAttribute('muted', '');
      domElement.setAttribute('playsinline', '');
      domElement.style.width = '100%';
      // domElement.style.height = document.documentElement.clientHeight + 'px';

      // check API is available
      if (navigator.mediaDevices === undefined || navigator.mediaDevices.enumerateDevices === undefined || navigator.mediaDevices.getUserMedia === undefined) {
        if (navigator.mediaDevices === undefined) {
          var fctName = 'navigator.mediaDevices';
        } else if (navigator.mediaDevices.enumerateDevices === undefined) {
          var fctName = 'navigator.mediaDevices.enumerateDevices';
        } else if (navigator.mediaDevices.getUserMedia === undefined) {
          var fctName = 'navigator.mediaDevices.getUserMedia';
        } else {
          console.assert(false);
        }
        onError({
          name: '',
          message: 'WebRTC issue-! ' + fctName + ' not present in your browser'
        });
        return null;
      }

      // get available devices
      navigator.mediaDevices.enumerateDevices().then(function(devices) {

        var userMediaConstraints = {
          audio: false,
          video: {
            // width: 3024,
            // height: 4890,
            facingMode: 'environment',
          }
        };

        // get a device which satisfy the constraints
        navigator.mediaDevices.getUserMedia(userMediaConstraints).then(function success(stream) {
          domElement.srcObject = stream;
          document.body.addEventListener('click', function() {
            domElement.play();
          });

          // const track = stream.getVideoTracks()[0];

          // domElement.addEventListener('loadedmetadata', (e) => {
          //   window.setTimeout(() => (
          //     onCapabilitiesReady(track.getCapabilities())
          //   ), 500);
          // });

          // function onCapabilitiesReady(capabilities) {
          //   console.log(capabilities)
          //   console.log(capabilities.torch)
          //   console.log(track.applyConstraints)
          //   if (capabilities.torch) {
          //     track.applyConstraints({
          //       advanced: [{torch: true}]
          //     })
          //     .catch(e => console.log(e));
          //   }
          // }

          // wait until the video stream is ready
          // var interval = setInterval(function() {
          //   if (!domElement.videoWidth) {
          //     return;
          //   }
          //   stage.appendChild(domElement);
          //   clearInterval(interval);
          // }, 1000 / 50);
        }).catch(function(error) {
          onError({
            name: error.name,
            message: error.message
          });
        });
      }).catch(function(error) {
        onError({
          message: error.message
        });
      });

      return domElement;
    }
    document.getElementById('touch').onclick = function () {
      console.log(this.getBoundingClientRect().height)
      document.documentElement.scrollTop = this.getBoundingClientRect().height - 150;
    };
    window.onload = function() {
      var el = initSourceWebcam();
      document.getElementById('app').appendChild(el);
    };
  </script>
</body>
</html>
